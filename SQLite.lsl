library SQLite;

types {
    ResultSet(java.sql.ResultSet);
    Statement(java.sql.Statement);
    String(java.lang.String);
    Connection(java.sql.Connection);
    DatabaseMetaData(java.sql.DatabaseMetaData);
    boolean(boolean);
    int(int);
    int[](int[]);
    String[](String[]);
    long[](long[]);
    long(long);
}

automaton ADatabaseMetaData {
    state Created;
    state DriverNameWasRetrieved;

    shift Created->DriverNameWasRetrieved (getDriverName);
    shift DriverNameWasRetrieved->DriverNameWasRetrieved (getDriverName);
}

automaton AStatement {
    state Created;
    state ExecutedAtLeastOnce;
    finishstate Closed;

    shift Created->ExecutedAtLeastOnce (execute, executeBatch, executeLargeBatch, executeLargeUpdate, executeQuery, executeUpdate);
    shift ExecutedAtLeastOnce->self (execute, executeBatch, executeLargeBatch, executeLargeUpdate, executeQuery, executeUpdate);
    shift ExecutedAtLeastOnce->Closed (close);
}

fun Statement.execute(sql: String) : boolean;
fun Statement.execute(sql: String, autoGeneratedKeys: int) : boolean;
fun Statement.execute(sql: String, columnIndexes: int[]) : boolean;
fun Statement.execute(sql: String, columnNames: String[]) : boolean;
fun Statement.executeBatch() : int[];
fun Statement.executeLargeBatch() : long[];
fun Statement.executeLargeUpdate(sql: String) : long;
fun Statement.executeLargeUpdate(sql: String, autoGeneratedKeys: int) : long;
fun Statement.executeLargeUpdate(sql: String, columnIndexes: int[]) : long;
fun Statement.executeLargeUpdate(sql: String, columnNames: String[]) : long;
fun Statement.executeQuery(sql: String) : ResultSet {
    result = new AResultSet(Created);
}
fun Statement.executeUpdate(sql: String) : int;
fun Statement.executeUpdate(sql: String, autoGeneratedKeys: int) : int;
fun Statement.executeUpdate(sql: String, columnIndexes: int[]) : int;
fun Statement.executeUpdate(sql: String, columnNames: String[]) : int;
fun Statement.close();

automaton AResultSet {
    state Created;
    finishstate Closed;

    shift any->Closed (close);
}

fun ResultSet.close();

fun Connection.getMetaData() : DatabaseMetaData {
    result = new ADatabaseMetaData(Created);
}

fun DatabaseMetaData.getDriverName() : String;

fun Connection.createStatement() : Statement {
    result = new AStatement(Created);
}
